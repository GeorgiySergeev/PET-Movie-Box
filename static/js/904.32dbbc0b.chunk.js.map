{"version":3,"file":"static/js/904.32dbbc0b.chunk.js","mappings":"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","sources":["webpack://Movie-Box/./src/components/LoginForm/Loginform.module.css?de1c","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"Loginform_formContainer__bw8jz\",\"form\":\"Loginform_form__Lyk-1\",\"formTitle\":\"Loginform_formTitle__fW91r\",\"inputContainer\":\"Loginform_inputContainer__vJLvz\",\"submit\":\"Loginform_submit__srj1j\",\"signupLink\":\"Loginform_signupLink__jEdHU\"};","import { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FcGoogle } from 'react-icons/fc';\nimport { app, googleAuthProvider } from '../../servises/firebase-auth';\nimport { setUser } from '../../redux/auth/auth-slice';\nimport {\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\n\nimport css from '../LoginForm/Loginform.module.css';\n// import { selectCurrentUserId } from '../../redux/auth/auth-selectors';\n\nimport { getDatabase, onValue, ref } from 'firebase/database';\nimport { setWatchList } from '../../redux/watchlist/watchlist-slice';\n\nconst LoginForm = () => {\n  const auth = getAuth(app);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [pass, setPass] = useState('password');\n  // const id = useSelector(selectCurrentUserId);\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const showPassword = () => {\n    setPass(prev => (prev === 'password' ? 'text' : 'password'));\n  };\n\n  const getUserData = userId => {\n    const db = getDatabase();\n    const userRef = ref(db, `users/${userId}`);\n\n    // Устанавливаем слушатель изменений данных\n    onValue(userRef, snapshot => {\n      const userData = snapshot.val();\n\n      if (userData) {\n        // console.log('User data:', userData.watchlist);\n        dispatch(setWatchList(userData.watchlist));\n        return;\n\n        // Далее вы можете использовать userData по вашему усмотрению\n      } else {\n        console.log('User not found');\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    signInWithEmailAndPassword(auth, formData.email, formData.password)\n      .then(userCredential => {\n        const userId = auth.currentUser.uid;\n        // Signed in\n        const user = userCredential.user;\n        const userObj = {\n          email: user.email,\n          token: user.accessToken,\n          isLoggedIn: true,\n          id: user.uid,\n        };\n        console.log(userId);\n        // dispatch(setIsLoggedIn(true));\n        console.log('User is logged in');\n        // writeUserData(userId, user.email, [{ i: 5 }]);\n        getUserData(userId);\n\n        dispatch(setUser(userObj));\n        // downloadMoviesFromStorage(userId);\n        navigate('/');\n\n        // ...\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  };\n\n  const handleLogInWithPopUp = () => {\n    signInWithPopup(auth, googleAuthProvider)\n      .then(credentials => {\n        // const userId = auth.currentUser.uid;\n\n        const user = credentials.user;\n        const userObj = {\n          email: user.email,\n          token: user.accessToken,\n          isLoggedIn: true,\n          id: user.uid,\n        };\n        // Успешный вход\n        // dispatch(setIsLoggedIn(credentials?.user?.emailVerified));\n\n        dispatch(setUser(userObj));\n        // getUserData(userId);\n\n        // downloadMoviesFromStorage(userId);\n        console.log('User is logged in');\n      })\n      .catch(error => {\n        // Ошибка входа\n        console.log('Login Error:', error.message);\n      });\n  };\n\n  return (\n    <div className={`${css.formContainer}`}>\n      <form className={`${css.form}`} onSubmit={handleSubmit}>\n        <p className={`${css.formTitle}`}>Log in to your account</p>\n        <div className={`${css.inputContainer}`}>\n          <input\n            placeholder=\"Enter email\"\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n          <span>\n            <svg\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n                strokeWidth=\"2\"\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n              ></path>\n            </svg>\n          </span>\n        </div>\n        <div className={`${css.inputContainer}`}>\n          <input\n            placeholder=\"Enter password\"\n            type={pass}\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n\n          <span>\n            <svg\n              onClick={showPassword}\n              stroke={pass === 'text' ? 'red' : 'currentColor'}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                strokeWidth=\"2\"\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n              ></path>\n              <path\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                strokeWidth=\"2\"\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n              ></path>\n            </svg>\n          </span>\n        </div>\n        <button className={`${css.submit}`} type=\"submit\">\n          Log in\n        </button>\n        <button\n          name=\"google-auth\"\n          onClick={handleLogInWithPopUp}\n          className={`${css.submit}`}\n          type=\"button\"\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 15,\n          }}\n        >\n          <FcGoogle style={{ width: 25, height: 25 }} /> Log in with Google\n        </button>\n\n        <p className={`${css.signupLink}`}>\n          No account?\n          <Link style={{ color: '#E05160' }} to=\"/register\">\n            {'  '}\n            Register\n          </Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { Header } from 'components/Header/Header';\nimport LoginForm from 'components/LoginForm/LoginForm';\n// import { useSelector } from 'react-redux';\n// import { selectAuthError } from '../redux/auth/auth-selectors';\n// import { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst Login = () => {\n  // const error = useSelector(selectAuthError);\n\n  // console.log('error', error);\n\n  return (\n    <div style={{ maxWidth: 1280, margin: '0 auto' }}>\n      <Header></Header>\n      {/* <h1>LOGIN PAGE</h1> */}\n      {/* {error && Report.failure('Invalid email or password!')} */}\n\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["auth","getAuth","app","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","pass","setPass","_useState3","email","password","_useState4","formData","setFormData","getUserData","userId","db","getDatabase","userRef","ref","concat","onValue","snapshot","userData","val","setWatchList","watchlist","console","log","handleChange","e","_e$target","target","name","value","prevData","_objectSpread","_defineProperty","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","preventDefault","signInWithEmailAndPassword","then","userCredential","currentUser","uid","user","userObj","token","accessToken","isLoggedIn","id","setUser","catch","error","errorCode","code","errorMessage","message","stop","_x","apply","arguments","_jsx","className","css","children","_jsxs","onSubmit","placeholder","type","onChange","stroke","viewBox","fill","xmlns","d","strokeWidth","strokeLinejoin","strokeLinecap","onClick","signInWithPopup","googleAuthProvider","credentials","style","display","alignItems","justifyContent","gap","FcGoogle","width","height","Link","color","to","maxWidth","margin","Header","LoginForm"],"sourceRoot":""}