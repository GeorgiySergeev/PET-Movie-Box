{"version":3,"file":"static/js/709.a1032961.chunk.js","mappings":"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","sources":["components/Topbar/Topbar.styled.jsx","components/Topbar/Topbar.jsx","components/GalleryTitle/GalleryTitle.styled.js","components/GalleryTitle/GalleryTitle.jsx","pages/Home.jsx","servises/constant.js","redux/movies/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TopBarWrapper = styled.div`\n  position: relative;\n  max-width: 1106px;\n  height: 420px;\n  margin-bottom: 25px;\n  border-radius: 8px;\n  /* padding: 20px; */\n  overflow: hidden;\n\n  /* Добавим прозрачный фон поверх слайдера */\n  ::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(86, 86, 86, 0.6);\n    z-index: 10; /* Выставим z-index поверх слайдера (обычно слайдеры имеют z-index: 0 по умолчанию) */\n  }\n`;\n\nexport const TopBarTitle = styled.h1`\n  position: absolute;\n  top: 25px;\n  left: 20px;\n  display: block;\n  font-weight: 900;\n  font-size: 48px;\n  color: #e1e1e1;\n  font-family: 'Archivo', sans-serif;\n\n  margin-bottom: 15px;\n  z-index: 12;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 68px;\n  }\n`;\n\nexport const TopBarText = styled.p`\n  position: absolute;\n  top: 140px;\n  left: 20px;\n  font-size: 18px;\n  font-family: 'Archivo', sans-serif;\n  color: #e1e1e1;\n  width: 380px;\n  margin-bottom: 13px;\n  line-height: 28px;\n  z-index: 12;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 38px;\n    /* top: 200px; */\n    width: 780px;\n    line-height: 48px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport {\n  Autoplay,\n  Navigation,\n  Pagination,\n  // Scrollbar,\n  // A11y,\n} from 'swiper/modules';\nimport 'swiper/css/bundle';\n// import 'swiper/css/navigation';\n// import 'swiper/css/pagination';\n// import 'swiper/css/scrollbar';\n\nimport { TopBarWrapper, TopBarTitle, TopBarText } from './Topbar.styled';\nimport { getAllTrending } from 'servises/api';\n\nconst BASIC_IMG_URL = 'https://image.tmdb.org/t/p/w1280';\n\nexport const TopBar = ({ title, text, span }) => {\n  const [moviesSlides, setMoviesSlides] = useState([]);\n\n  const getSlides = async () => {\n    try {\n      const { results } = await getAllTrending('day');\n      if (!results) {\n        throw new Error();\n      }\n      setMoviesSlides(results);\n      // console.log(results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getSlides();\n  }, []);\n\n  return (\n    <TopBarWrapper>\n      <TopBarTitle>\n        {title} {<span style={{ color: '#f33f3f' }}>{span}</span>}\n        {/* Welcome to <span style={{ color: '#f33f3f' }}>MovieBox</span> */}\n      </TopBarTitle>\n      <TopBarText>{text}</TopBarText>\n\n      <Swiper\n        spaceBetween={30}\n        centeredSlides={true}\n        autoplay={{\n          delay: 5000,\n          disableOnInteraction: false,\n        }}\n        pagination={{\n          clickable: false,\n        }}\n        navigation={false}\n        modules={[Autoplay, Pagination, Navigation]}\n        className=\"mySwiper\"\n      >\n        {moviesSlides.map(({ backdrop_path, title }, i) => {\n          return (\n            <SwiperSlide key={i}>\n              <>\n                <img src={`${BASIC_IMG_URL}${backdrop_path}`} alt={title} />\n                <h3>{title}</h3>\n              </>\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n    </TopBarWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  font-size: 36px;\n  margin-bottom: 25px;\n`;\n","import { Title } from './GalleryTitle.styled';\nexport const GalleryTitle = ({ text }) => {\n  return <Title>{text}</Title>;\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useSearchParams } from 'react-router-dom';\nimport { Gallery } from 'components/Gallery/Gallery';\nimport { TopBar } from 'components/Topbar/Topbar';\nimport text from '../servises/constant';\n\nimport { GalleryTitle } from 'components/GalleryTitle/GalleryTitle';\n// import { MobileHeader } from 'components/Mobile/Header/MobileHeader';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import { SearchForm } from 'components/SearchForm/SearchForm';\n\nimport { selectLoading, selectMovies } from '../redux/movies/selectors';\nimport { fetchTopMovies } from '../redux/movies/operations';\n\nconst Home = () => {\n  const [shouldRenderTopbar, setShouldRenderTopbar] = useState(false);\n\n  const isLoading = useSelector(selectLoading);\n  const movies = useSelector(selectMovies);\n  // console.log(movies);\n  // const BASIC_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\n  const dispatch = useDispatch();\n\n  // const [query, setQuery] = useSearchParams();\n\n  //  const range = searchParams.get('range') || 'day';\n\n  useEffect(() => {\n    dispatch(fetchTopMovies('day'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const shouldRender = window.innerWidth >= 768;\n      setShouldRenderTopbar(shouldRender);\n    };\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading && <h2>Loading</h2>}\n      {shouldRenderTopbar ? (\n        <TopBar title={'Welcome to'} span={'MovieBox'} text={text}></TopBar>\n      ) : null}\n      {/* <SearchForm /> */}\n      <GalleryTitle text={'Popular Movies'} />\n      <Gallery gallery={movies}></Gallery>\n    </>\n  );\n};\nexport default Home;\n","const headerText =\n  'Browse movies, add them to watchlists and share them with friends. Just click the to add a movie, the poster to see more details or to mark the movie as watched.';\n\nexport default headerText;\n","export const selectMovies = store => store.movies.movies;\nexport const selectLoading = store => store.movies.isLoading;\nexport const selectError = store => store.movies.error;\nexport const selectTotalPage = store => store.movies.totalPage;\n"],"names":["TopBarWrapper","styled","_templateObject","_taggedTemplateLiteral","TopBarTitle","_templateObject2","TopBarText","_templateObject3","TopBar","_ref","title","text","span","_useState","useState","_useState2","_slicedToArray","moviesSlides","setMoviesSlides","getSlides","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getAllTrending","results","_context","prev","next","getAllTrending","sent","Error","t0","console","log","stop","apply","arguments","useEffect","_jsxs","children","_jsx","style","color","Swiper","spaceBetween","centeredSlides","autoplay","delay","disableOnInteraction","pagination","clickable","navigation","modules","Autoplay","Pagination","Navigation","className","map","_ref3","i","backdrop_path","SwiperSlide","_Fragment","src","concat","alt","Title","GalleryTitle","shouldRenderTopbar","setShouldRenderTopbar","isLoading","useSelector","selectLoading","movies","selectMovies","dispatch","useDispatch","fetchTopMovies","handleResize","shouldRender","window","innerWidth","addEventListener","removeEventListener","Gallery","gallery","store","selectTotalPage","totalPage"],"sourceRoot":""}