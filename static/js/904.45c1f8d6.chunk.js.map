{"version":3,"file":"static/js/904.45c1f8d6.chunk.js","mappings":"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","sources":["webpack://Movie-Box/./src/components/LoginForm/Loginform.module.css?de1c","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"Loginform_formContainer__bw8jz\",\"form\":\"Loginform_form__Lyk-1\",\"formTitle\":\"Loginform_formTitle__fW91r\",\"inputContainer\":\"Loginform_inputContainer__vJLvz\",\"submit\":\"Loginform_submit__srj1j\",\"signupLink\":\"Loginform_signupLink__jEdHU\"};","import { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FcGoogle } from 'react-icons/fc';\nimport { app, googleAuthProvider } from '../../servises/firebase-auth';\nimport { setUser } from '../../redux/auth/auth-slice';\nimport {\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\n\nimport css from '../LoginForm/Loginform.module.css';\n\nconst LoginForm = () => {\n  const auth = getAuth(app);\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n  const [pass, setPass] = useState('password');\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const showPassword = () => {\n    setPass(prev => (prev === 'password' ? 'text' : 'password'));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    signInWithEmailAndPassword(auth, formData.email, formData.password)\n      .then(userCredential => {\n        const userId = auth.currentUser.uid;\n        // Signed in\n        const user = userCredential.user;\n        const userObj = {\n          email: user.email,\n          token: user.accessToken,\n          isLoggedIn: true,\n          id: user.uid,\n        };\n        console.log(userId);\n        // dispatch(setIsLoggedIn(true));\n        console.log('User is logged in');\n        // writeUserData(userId, user.email, [{ i: 5 }]);\n\n        dispatch(setUser(userObj));\n        // downloadMoviesFromStorage(userId);\n        navigate('/');\n\n        // ...\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  };\n\n  const handleLogInWithPopUp = () => {\n    signInWithPopup(auth, googleAuthProvider)\n      .then(credentials => {\n        const user = credentials.user;\n        const userObj = {\n          email: user.email,\n          token: user.accessToken,\n          isLoggedIn: true,\n          id: user.uid,\n        };\n        // Успешный вход\n        // dispatch(setIsLoggedIn(credentials?.user?.emailVerified));\n        console.log('User is logged in');\n        dispatch(setUser(userObj));\n\n        // downloadMoviesFromStorage(userId);\n      })\n      .catch(error => {\n        // Ошибка входа\n        console.log('Login Error:', error.message);\n      });\n  };\n\n  return (\n    <div className={`${css.formContainer}`}>\n      <form className={`${css.form}`} onSubmit={handleSubmit}>\n        <p className={`${css.formTitle}`}>Log in to your account</p>\n        <div className={`${css.inputContainer}`}>\n          <input\n            placeholder=\"Enter email\"\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n          <span>\n            <svg\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n                strokeWidth=\"2\"\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n              ></path>\n            </svg>\n          </span>\n        </div>\n        <div className={`${css.inputContainer}`}>\n          <input\n            placeholder=\"Enter password\"\n            type={pass}\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n\n          <span>\n            <svg\n              onClick={showPassword}\n              stroke={pass === 'text' ? 'red' : 'currentColor'}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                strokeWidth=\"2\"\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n              ></path>\n              <path\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                strokeWidth=\"2\"\n                strokeLinejoin=\"round\"\n                strokeLinecap=\"round\"\n              ></path>\n            </svg>\n          </span>\n        </div>\n        <button className={`${css.submit}`} type=\"submit\">\n          Log in\n        </button>\n        <button\n          name=\"google-auth\"\n          onClick={handleLogInWithPopUp}\n          className={`${css.submit}`}\n          type=\"button\"\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 15,\n          }}\n        >\n          <FcGoogle style={{ width: 25, height: 25 }} /> Log in with Google\n        </button>\n\n        <p className={`${css.signupLink}`}>\n          No account?\n          <Link style={{ color: '#E05160' }} to=\"/register\">\n            {'  '}\n            Register\n          </Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { Header } from 'components/Header/Header';\nimport LoginForm from 'components/LoginForm/LoginForm';\n// import { useSelector } from 'react-redux';\n// import { selectAuthError } from '../redux/auth/auth-selectors';\n// import { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst Login = () => {\n  // const error = useSelector(selectAuthError);\n\n  // console.log('error', error);\n\n  return (\n    <div style={{ maxWidth: 1280, margin: '0 auto' }}>\n      <Header></Header>\n      <h1>LOGIN PAGE</h1>\n      {/* {error && Report.failure('Invalid email or password!')} */}\n\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["auth","getAuth","app","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","pass","setPass","_useState3","email","password","_useState4","formData","setFormData","handleChange","e","_e$target","target","name","value","prevData","_objectSpread","_defineProperty","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","preventDefault","signInWithEmailAndPassword","then","userCredential","userId","currentUser","uid","user","userObj","token","accessToken","isLoggedIn","id","console","log","setUser","catch","error","errorCode","code","errorMessage","message","stop","_x","apply","arguments","_jsx","className","concat","css","children","_jsxs","onSubmit","placeholder","type","onChange","stroke","viewBox","fill","xmlns","d","strokeWidth","strokeLinejoin","strokeLinecap","onClick","signInWithPopup","googleAuthProvider","credentials","style","display","alignItems","justifyContent","gap","FcGoogle","width","height","Link","color","to","maxWidth","margin","Header","LoginForm"],"sourceRoot":""}