{"version":3,"file":"static/js/565.aa33a36f.chunk.js","mappings":"sNAKMA,GAAmBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAmB,CAC1C,OAAQ,CACNE,eAAgB,UAElB,WAAY,CACVC,MAAO,QACPC,SAAU,MAIC,SAASC,EAAeC,GAAuB,IAApBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAK/C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,QAAS,EAAEC,UAChBH,EAAAA,EAAAA,KAACV,EAAgB,CACfQ,MAAOA,EACPJ,MAAM,UACNU,YAAa,EACbL,SAVkB,SAACM,EAAOC,GAC9BP,EAASO,EACX,KAYF,C,kKCUA,UA/Be,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAUC,EAAAA,EAAAA,MAAVD,MACRE,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAEhCI,GAAwBL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5Bd,EAAIe,EAAA,GAAEC,EAAOD,EAAA,IAEpBE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAA3B,GAAA4B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACUC,EAAAA,EAAAA,IAAYN,GAAG,KAAD,EAAAC,EAAAE,EAAAI,KAAtCL,EAAaD,EAAbC,cACRX,EAAcW,GAAe,wBAAAC,EAAAK,OAAA,GAAAT,EAAA,KAC9B,gBAHaU,GAAA,OAAAxC,EAAAyC,MAAA,KAAAC,UAAA,KAKdhC,GAASiC,EAAAA,EAAAA,IAAoB,CAAE5B,MAAOA,EAAON,KAAMA,KACnDkB,EAAS,CAAEZ,MAAOA,EAAON,KAAMA,GACjC,GAAG,CAACC,EAAUK,EAAON,IAMrB,OACEmC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvC,SAAA,EACEH,EAAAA,EAAAA,KAAC2C,EAAAA,EAAO,CAACC,QAASnC,KAClBT,EAAAA,EAAAA,KAACR,EAAAA,EAAU,CAACM,MAAiB,OAAVoB,QAAU,IAAVA,EAAAA,EAAc,EAAGnB,SAPf,SAAAO,GACvBgB,EAAQhB,EACV,MAQF,C,wGCtCO,IAAMK,EAAe,SAAAkC,GAAK,OAAIA,EAAMpC,OAAOA,MAAO,EAC5CqC,EAAgB,SAAAD,GAAK,OAAIA,EAAMpC,OAAOsC,SAAU,EAEhDC,EAAkB,SAAAH,GAAK,OAAIA,EAAMpC,OAAOwC,SAAU,C","sources":["components/Pagination/Pagination.jsx","pages/Search.jsx","redux/movies/selectors.js"],"sourcesContent":["import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/system';\n\nconst CustomPagination = styled(Pagination)({\n  '& ul': {\n    justifyContent: 'center',\n  },\n  '& button': {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n\nexport default function BasicPagination({ count, onChange }) {\n  const onChangeHandler = (event, page) => {\n    onChange(page);\n  };\n\n  return (\n    <Stack spacing={5}>\n      <CustomPagination\n        count={count}\n        color=\"primary\"\n        defaultPage={1}\n        onChange={onChangeHandler}\n      />\n    </Stack>\n  );\n}\n\n// ! Dosn`t used\n","import { Gallery } from 'components/Gallery/Gallery';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSearchedMovies } from '../redux/movies/operations';\nimport { searchMovie } from 'servises/api';\nimport { selectMovies } from '../redux/movies/selectors';\nimport { useParams } from 'react-router-dom';\nimport Pagination from '../components/Pagination/Pagination';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n\n  const movies = useSelector(selectMovies);\n  const { query } = useParams();\n  const [totalPages, setTotalPages] = useState(null);\n\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const getTotal = async q => {\n      const { total_results } = await searchMovie(q);\n      setTotalPages(total_results);\n    };\n\n    dispatch(fetchSearchedMovies({ query: query, page: page }));\n    getTotal({ query: query, page: page });\n  }, [dispatch, query, page]);\n\n  const handlePageChange = page => {\n    setPage(page);\n  };\n\n  return (\n    <>\n      <Gallery gallery={movies}></Gallery>\n      <Pagination count={totalPages ?? 1} onChange={handlePageChange} />\n    </>\n  );\n};\n\nexport default Search;\n","export const selectMovies = store => store.movies.movies;\nexport const selectLoading = store => store.movies.isLoading;\nexport const selectError = store => store.movies.error;\nexport const selectTotalPage = store => store.movies.totalPage;\n"],"names":["CustomPagination","styled","Pagination","justifyContent","color","fontSize","BasicPagination","_ref","count","onChange","_jsx","Stack","spacing","children","defaultPage","event","page","dispatch","useDispatch","movies","useSelector","selectMovies","query","useParams","_useState","useState","_useState2","_slicedToArray","totalPages","setTotalPages","_useState3","_useState4","setPage","useEffect","getTotal","_asyncToGenerator","_regeneratorRuntime","_callee","q","_yield$searchMovie","total_results","_context","prev","next","searchMovie","sent","stop","_x","apply","arguments","fetchSearchedMovies","_jsxs","_Fragment","Gallery","gallery","store","selectLoading","isLoading","selectTotalPage","totalPage"],"sourceRoot":""}