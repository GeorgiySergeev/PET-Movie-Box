{"version":3,"file":"static/js/570.5a721e21.chunk.js","mappings":"qNAEaA,EAAQC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wD,SCDjBC,EAAe,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAC7B,OAAOC,EAAAA,EAAAA,KAACP,EAAK,CAAAQ,SAAEF,GACjB,E,+3CCDaG,EAAgBR,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,05BAsB1BO,EAAcT,EAAAA,EAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sSAkBvBS,EAAaX,EAAAA,EAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sWCxBrBW,EAAS,SAAHT,GAA+B,IAAzBU,EAAKV,EAALU,MAAOT,EAAID,EAAJC,KAAMU,EAAIX,EAAJW,KACpC,OACEC,EAAAA,EAAAA,MAACR,EAAa,CAAAD,SAAA,EACZS,EAAAA,EAAAA,MAACP,EAAW,CAAAF,SAAA,CACTO,EAAM,KAAER,EAAAA,EAAAA,KAAA,QAAMW,MAAO,CAAEC,MAAO,WAAYX,SAAEQ,QAG/CT,EAAAA,EAAAA,KAACK,EAAU,CAAAJ,SAAEF,KAEbC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLC,aAAc,GACdC,gBAAgB,EAChBC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,WAAY,CACVC,WAAW,GAEbC,YAAY,EACZC,QAAS,CAACC,EAAAA,GAAUC,EAAAA,GAAYC,EAAAA,IAChCC,UAAU,WAAUzB,SAEnB0B,EAAAA,KAAW,SAAAC,EAAmBC,GAAO,IAAvBC,EAAKF,EAALE,MAAOtB,EAAKoB,EAALpB,MACpB,OACER,EAAAA,EAAAA,KAAC+B,EAAAA,GAAW,CAAA9B,UACVD,EAAAA,EAAAA,KAAA,OAAKgC,IAAKF,EAAOG,IAAKzB,KADNqB,EAItB,QAIR,E,oBCSA,EA7Ca,WACX,IAAAK,GAAoDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAE1CI,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAIrBC,GAAWC,EAAAA,EAAAA,MAyBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAe,OAC1B,GAAG,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAe,WACnB,IAAMC,EAAeC,OAAOC,YAAc,IAC1Cb,EAAsBW,EACxB,EAMA,OAJAD,IAEAE,OAAOE,iBAAiB,SAAUJ,GAE3B,WACLE,OAAOG,oBAAoB,SAAUL,EACvC,CACF,GAAG,KAGDvC,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAAtD,SAAA,CACGuC,IAAaxC,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACjBqC,GACCtC,EAAAA,EAAAA,KAACO,EAAM,CAACC,MAAO,aAAcC,KAAM,WAAYV,KCnDrD,sKDoDQ,MAEJC,EAAAA,EAAAA,KAACH,EAAY,CAACE,KAAM,qBACpBC,EAAAA,EAAAA,KAACwD,EAAAA,EAAO,CAACC,QAASd,MAGxB,C,wGE3DO,IAAMC,EAAe,SAAAc,GAAK,OAAIA,EAAMf,OAAOA,MAAO,EAC5CD,EAAgB,SAAAgB,GAAK,OAAIA,EAAMf,OAAOH,SAAU,EAEhDmB,EAAkB,SAAAD,GAAK,OAAIA,EAAMf,OAAOiB,SAAU,C","sources":["components/GalleryTitle/GalleryTitle.styled.js","components/GalleryTitle/GalleryTitle.jsx","components/Topbar/Topbar.styled.jsx","components/Topbar/Topbar.jsx","pages/Home.jsx","servises/constant.js","redux/movies/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-weight: 32px;\n  margin-bottom: 25px;\n`;\n","import { Title } from './GalleryTitle.styled';\nexport const GalleryTitle = ({ text }) => {\n  return <Title>{text}</Title>;\n};\n","import styled from '@emotion/styled';\n\nexport const TopBarWrapper = styled.div`\n  position: relative;\n  max-width: 1136px;\n  height: 350px;\n  margin-bottom: 25px;\n  border-radius: 8px;\n  /* padding: 20px; */\n  overflow: hidden;\n\n  /* Добавим прозрачный фон поверх слайдера */\n  ::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(86, 86, 86, 0.8);\n    z-index: 10; /* Выставим z-index поверх слайдера (обычно слайдеры имеют z-index: 0 по умолчанию) */\n  }\n`;\n\nexport const TopBarTitle = styled.h1`\n  position: absolute;\n  top: 25px;\n  left: 20px;\n  display: block;\n  font-weight: 900;\n  font-size: 48px;\n  color: #e1e1e1;\n  font-family: 'Archivo', sans-serif;\n\n  margin-bottom: 15px;\n  z-index: 12;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 68px;\n  }\n`;\n\nexport const TopBarText = styled.p`\n  position: absolute;\n  top: 140px;\n  left: 20px;\n  font-size: 18px;\n  font-family: 'Archivo', sans-serif;\n  color: #e1e1e1;\n  width: 380px;\n  margin-bottom: 13px;\n  line-height: 28px;\n  z-index: 12;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 38px;\n    /* top: 200px; */\n    width: 780px;\n    line-height: 48px;\n  }\n`;\n","import React from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport {\n  Autoplay,\n  Navigation,\n  Pagination,\n  // Scrollbar,\n  // A11y,\n} from 'swiper/modules';\nimport 'swiper/css/bundle';\n// import 'swiper/css/navigation';\n// import 'swiper/css/pagination';\n// import 'swiper/css/scrollbar';\n\nimport slides from 'slider.json';\n\nimport { TopBarWrapper, TopBarTitle, TopBarText } from './Topbar.styled';\n\nexport const TopBar = ({ title, text, span }) => {\n  return (\n    <TopBarWrapper>\n      <TopBarTitle>\n        {title} {<span style={{ color: '#f33f3f' }}>{span}</span>}\n        {/* Welcome to <span style={{ color: '#f33f3f' }}>MovieBox</span> */}\n      </TopBarTitle>\n      <TopBarText>{text}</TopBarText>\n\n      <Swiper\n        spaceBetween={30}\n        centeredSlides={true}\n        autoplay={{\n          delay: 5000,\n          disableOnInteraction: false,\n        }}\n        pagination={{\n          clickable: false,\n        }}\n        navigation={false}\n        modules={[Autoplay, Pagination, Navigation]}\n        className=\"mySwiper\"\n      >\n        {slides.map(({ image, title }, i) => {\n          return (\n            <SwiperSlide key={i}>\n              <img src={image} alt={title} />\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n    </TopBarWrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { GalleryTitle } from 'components/GalleryTitle/GalleryTitle';\n// import { MobileHeader } from 'components/Mobile/Header/MobileHeader';\nimport { Gallery } from 'components/Gallery/Gallery';\n// import { Sidebar } from 'components/Sidebar/Sidebar';\n// import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { TopBar } from 'components/Topbar/Topbar';\n\nimport text from '../servises/constant';\nimport { selectLoading, selectMovies } from '../redux/movies/selectors';\nimport { fetchTopMovies } from '../redux/movies/operations';\n\nconst Home = () => {\n  const [shouldRenderTopbar, setShouldRenderTopbar] = useState(false);\n\n  const isLoading = useSelector(selectLoading);\n  const movies = useSelector(selectMovies);\n  // console.log(movies);\n  // const BASIC_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\n  const dispatch = useDispatch();\n\n  // const [query, setQuery] = useSearchParams();\n\n  //  const range = searchParams.get('range') || 'day';\n\n  useEffect(() => {\n    dispatch(fetchTopMovies('day'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const shouldRender = window.innerWidth >= 768;\n      setShouldRenderTopbar(shouldRender);\n    };\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading && <h2>Loading</h2>}\n      {shouldRenderTopbar ? (\n        <TopBar title={'Welcome to'} span={'MovieBox'} text={text}></TopBar>\n      ) : null}\n      {/* <SearchForm /> */}\n      <GalleryTitle text={'Trending movies'} />\n      <Gallery gallery={movies}></Gallery>\n    </>\n  );\n};\nexport default Home;\n","const headerText =\n  'Browse movies, add them to watchlists and share them with friends. Just click the to add a movie, the poster to see more details or to mark the movie as watched.';\n\nexport default headerText;\n","export const selectMovies = store => store.movies.movies;\nexport const selectLoading = store => store.movies.isLoading;\nexport const selectError = store => store.movies.error;\nexport const selectTotalPage = store => store.movies.totalPage;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","GalleryTitle","_ref","text","_jsx","children","TopBarWrapper","TopBarTitle","_templateObject2","TopBarText","_templateObject3","TopBar","title","span","_jsxs","style","color","Swiper","spaceBetween","centeredSlides","autoplay","delay","disableOnInteraction","pagination","clickable","navigation","modules","Autoplay","Pagination","Navigation","className","slides","_ref2","i","image","SwiperSlide","src","alt","_useState","useState","_useState2","_slicedToArray","shouldRenderTopbar","setShouldRenderTopbar","isLoading","useSelector","selectLoading","movies","selectMovies","dispatch","useDispatch","useEffect","fetchTopMovies","handleResize","shouldRender","window","innerWidth","addEventListener","removeEventListener","_Fragment","Gallery","gallery","store","selectTotalPage","totalPage"],"sourceRoot":""}